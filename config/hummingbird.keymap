/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF_L 0
#define NAV_L 1
#define SYM_L 2
#define NUM_L 3
#define MISC_L 4
#define DEAD_L 5

#define COMPOSE_KEY RALT

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <225>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        swm: switch_workspace_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <225>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&sw>;
        };
        lkm: leader_key_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <225>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&sl>;
        };

        dot_col: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        com_scol: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        minus_qm: minus_question {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

    };

    macros {
        sw: switch_workspace {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = < &macro_press &kp LGUI >
                , < &macro_press &kp LALT >
                , < &macro_press &kp LSHFT >
                , < &macro_param_1to1 >
                , < &macro_tap &kp MACRO_PLACEHOLDER >
                , < &macro_release &kp LSHFT >
                , < &macro_release &kp LALT >
                , < &macro_release &kp LGUI >
                ;
        };

        cmp_sq: compose_accents_single_quote {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = < &macro_tap &kp COMPOSE_KEY >
                , < &macro_tap &kp SINGLE_QUOTE >
                , < &macro_param_1to1 >
                , < &macro_tap &kp MACRO_PLACEHOLDER >
                ;
        };

        cmp_gq: compose_accents_grave_quote {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = < &macro_tap &kp COMPOSE_KEY >
                , < &macro_tap &kp GRAVE >
                , < &macro_param_1to1 >
                , < &macro_tap &kp MACRO_PLACEHOLDER >
                ;
        };

        cmp_car: compose_accents_caret {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = < &macro_tap &kp COMPOSE_KEY >
                , < &macro_tap &kp CARET >
                , < &macro_param_1to1 >
                , < &macro_tap &kp MACRO_PLACEHOLDER >
                ;
        };

    };

    combos {
        compatible = "zmk,combos";

        combo_z {
            timeout-ms = <50>;
            key-positions = <0 10>;
            bindings = <&kp Z>;
        };

        combo_w {
            timeout-ms = <50>;
            key-positions = <3 13>;
            bindings = <&kp W>;
        };

        combo_k {
            timeout-ms = <50>;
            key-positions = <9 19>;
            bindings = <&kp K>;
        };

        combo_dot {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&dot_col>;
        };

        combo_colon {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp COLON>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q       &kp C      &kp O      &kp P          &kp F            &kp J         &kp M       &kp D      &sl DEAD_L &kp Y
                &hm LSHFT A &hm LGUI S &hm LALT E &hm LCTRL N    &kp B            &kp L         &hm RCTRL R &hm LALT T &hm RGUI I &hm RSHFT U
                            &kp X      &minus_qm  &kp V                                         &kp H       &kp G      &com_scol
                                                  &hm LSHFT BSPC &lt NAV_L SPACE  &lt SYM_L ESC &mo NUM_L
            >;
        };

        nav_layer {
            display-name = "Nav";
            bindings = <
                &kp TAB        &kp HOME      &kp END       &kp LS(TAB)   &sw N6        &none          &none          &none         &none          &kp DELETE
                &swm LSHFT N1  &swm LGUI N2  &swm LALT N3  &swm LCTRL N4 &sw N5        &none          &hm RCTRL DOWN &hm LALT UP   &hm RGUI RIGHT &kp RSHFT
                               &kp LC(X)     &kp LC(C)     &kp LC(V)                                  &kp LEFT       &none         &none
                                                           &trans        &trans        &lt MISC_L RET &kp LS(RET)
            >;
        };

        sym_layer {
            display-name = "Sym";
            bindings = <
                &kp EXCL        &kp AT_SIGN    &kp HASH       &kp DOLLAR      &kp PERCENT      &kp CARET     &kp AMPERSAND   &kp ASTERISK    &kp PIPE        &kp DOUBLE_QUOTES
                &hm LSHFT LBRC  &hm LGUI LPAR  &hm LALT RPAR  &hm LCTRL RBRC  &kp EQUAL        &kp BACKSLASH &hm LCTRL PLUS  &hm LALT MINUS  &hm LGUI SLASH  &hm LSHFT SINGLE_QUOTE
                                &kp LBKT       &kp RBKT       &kp GRAVE                                      &kp TILDE       &kp LESS_THAN   &kp GREATER_THAN
                                                              &kp LSHFT       &lt MISC_L SPACE &trans        &trans
            >;
        };

        num_layer {
            display-name = "Num";
            bindings = <
                &none        &none       &none       &none        &kp N5          &kp N6        &none        &none       &none       &kp DELETE
                &hm LSHFT N1 &hm LGUI N2 &hm LALT N3 &hm LCTRL N4 &kp N5          &kp N6        &hm LCTRL N7 &hm LALT N8 &hm LGUI N9 &hm LSHFT N0
                             &none       &none       &none                                      &kp DOT      &none       &kp SLASH
                                                     &kp LSHFT    &trans          &trans        &trans
            >;
        };

        misc_layer {
            display-name = "Misc";
            bindings = <
                &kp LCTRL   &none      &none        &kp C_PP       &kp C_NEXT       &kp C_PREV    &none          &msc SCRL_DOWN &msc SCRL_LEFT &msc SCRL_RIGHT
                &kp LSHFT   &mkp RCLK  &mkp MCLK    &mkp LCLK      &kp C_NEXT       &kp C_PREV    &mmv MOVE_DOWN &mmv MOVE_UP  &mmv MOVE_RIGHT &msc SCRL_UP
                            &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP                                  &mmv MOVE_LEFT &kp C_BRI_DN  &kp C_BRI_UP
                                                    &trans         &trans           &trans        &trans
            >;
        };

        dead_key_layer {
            display-name = "Dead";
            bindings = <
                &cmp_car A  &none      &none        &cmp_car O     &none            &none         &none          &kp UNDER     &none           &cmp_car U
                &cmp_gq A   &cmp_sq E  &cmp_gq E    &cmp_car E     &none            &none         &none          &cmp_car I    &none           &cmp_gq U
                            &none      &none        &none                                         &none          &none         &none
                                                    &trans         &trans           &trans        &trans
            >;
        };
    };
};
